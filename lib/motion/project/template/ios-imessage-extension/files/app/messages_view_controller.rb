class MessagesViewController < MSMessagesAppViewController
  def viewDidLoad
    self.view.backgroundColor = UIColor.redColor

    label = UILabel.alloc.init
    label.text = "Hello World"
    label.textColor = UIColor.whiteColor
    label.textAlignment = NSTextAlignmentCenter
    label.setTranslatesAutoresizingMaskIntoConstraints(false)
    self.view.addSubview(label)

    self.view.addConstraints(NSLayoutConstraint.constraintsWithVisualFormat("|-[label]-|", options:0, metrics:nil, views:{ "label" => label }))
    self.view.addConstraints(NSLayoutConstraint.constraintsWithVisualFormat("V:|-[label]-|", options:0, metrics:nil, views:{ "label" => label }))
  end

  # Conversation Handling

  def didBecomeActiveWithConversation(conversation)
    # Called when the extension is about to move from the inactive to active state.
    # This will happen when the extension is about to present UI.

    # Use this method to configure the extension and restore previously stored state.
  end

  def willResignActiveWithConversation(conversation)
    # Called when the extension is about to move from the active to inactive state.
    # This will happen when the user dissmises the extension, changes to a different
    # conversation or quits Messages.

    # Use this method to release shared resources, save user data, invalidate timers,
    # and store enough state information to restore your extension to its current state
    # in case it is terminated later.
  end

  def didReceiveMessage(message, conversation:conversation)
    # Called when a message arrives that was generated by another instance of this
    # extension on a remote device.

    # Use this method to trigger UI updates in response to the message.
  end

  def didStartSendingMessage(message, conversation:conversation)
    # Called when the user taps the send button.
  end

  def didCancelSendingMessage(message, conversation:conversation)
    # Called when the user deletes the message without sending it.

    # Use this to clean up state related to the deleted message.
  end

  def willTransitionToPresentationStyle(resentationStyle)
    # Called before the extension transitions to a new presentation style.

    # Use this method to prepare for the change in presentation style.
  end

  def didTransitionToPresentationStyle(presentationStyle)
    # Called after the extension transitions to a new presentation style.

    # Use this method to finalize any behaviors associated with the change in presentation style.
  end

end
